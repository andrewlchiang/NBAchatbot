y2[i] <- (a*y1[i])+b
t[i] <- i
if (i < timeserieslength) y1[i+1]=y2[i]
}
mydata <- cbind(y1, y2, t)
parameters <- cbind(a, b, ystar)
parameters
mydata
plot(t, y1, type="o", ylab="Y", xlab="time", pch=20, lwd=2)
title(main = list("Y over time", cex=1.5,
col="black", font=1))
diff.model <- lm(y2 ~ y1)
summary(diff.model)
plot(y1, y2, xlab="", ylab="", xlim=c(.7, 1.1), ylim=c(.7, 1.1), pch=19)
title(xlab="Y", ylab="Y(t+1)", main="Plot of the first differences", cex=1.5,
col="black", font=2)
abline(diff.model, lwd=2)
#say what a and b are. use terms ex. stable unbounded, monotonic, equilibrium etc. regression reproduces the A and the B values
y1 <- .3 # This is the initial condition
y2 <- 0
t <- 0
a <- .6# This is the slope
b <- .3 # This is the intercept
ystar <- b/(1-a) # This is the equilibrium value
timeserieslength <- 10
for (i in 1:timeserieslength) {
y2[i] <- (a*y1[i])+b
t[i] <- i
if (i < timeserieslength) y1[i+1]=y2[i]
}
mydata <- cbind(y1, y2, t)
parameters <- cbind(a, b, ystar)
parameters
mydata
plot(t, y1, type="o", ylab="Y", xlab="time", pch=20, lwd=2)
title(main = list("Y over time", cex=1.5,
col="black", font=1))
diff.model <- lm(y2 ~ y1)
summary(diff.model)
plot(y1, y2, xlab="", ylab="", xlim=c(.2, .8), ylim=c(.2, .8), pch=19)
title(xlab="Y", ylab="Y(t+1)", main="Plot of the first differences", cex=1.5,
col="black", font=2)
abline(diff.model, lwd=2)
#say what a and b are. use terms ex. stable unbounded, monotonic, equilibrium etc. regression reproduces the A and the B values
y1 <- -2 # This is the initial condition
y2 <- 0
t <- 0
a <- 1.2# This is the slope
b <- .3 # This is the intercept
ystar <- b/(1-a) # This is the equilibrium value
timeserieslength <- 10
for (i in 1:timeserieslength) {
y2[i] <- (a*y1[i])+b
t[i] <- i
if (i < timeserieslength) y1[i+1]=y2[i]
}
mydata <- cbind(y1, y2, t)
parameters <- cbind(a, b, ystar)
parameters
mydata
plot(t, y1, type="o", ylab="Y", xlab="time", pch=20, lwd=2)
title(main = list("Y over time", cex=1.5,
col="black", font=1))
diff.model <- lm(y2 ~ y1)
summary(diff.model)
plot(y1, y2, xlab="", ylab="", xlim=c(.2, .8), ylim=c(.2, .8), pch=19)
title(xlab="Y", ylab="Y(t+1)", main="Plot of the first differences", cex=1.5,
col="black", font=2)
abline(diff.model, lwd=2)
#say what a and b are. use terms ex. stable unbounded, monotonic, equilibrium etc. regression reproduces the A and the B values
y1 <- -2 # This is the initial condition
y2 <- 0
t <- 0
a <- 1.2# This is the slope
b <- .3 # This is the intercept
ystar <- b/(1-a) # This is the equilibrium value
timeserieslength <- 10
for (i in 1:timeserieslength) {
y2[i] <- (a*y1[i])+b
t[i] <- i
if (i < timeserieslength) y1[i+1]=y2[i]
}
mydata <- cbind(y1, y2, t)
parameters <- cbind(a, b, ystar)
parameters
mydata
plot(t, y1, type="o", ylab="Y", xlab="time", pch=20, lwd=2)
title(main = list("Y over time", cex=1.5,
col="black", font=1))
diff.model <- lm(y2 ~ y1)
summary(diff.model)
plot(y1, y2, xlab="", ylab="", xlim=c(-4.7, -1.9), ylim=c(-4.7, -1.9), pch=19)
title(xlab="Y", ylab="Y(t+1)", main="Plot of the first differences", cex=1.5,
col="black", font=2)
abline(diff.model, lwd=2)
#say what a and b are. use terms ex. stable unbounded, monotonic, equilibrium etc. regression reproduces the A and the B values
y1 <- .3 # This is the initial condition
y2 <- 0
t <- 0
a <- 1.2# This is the slope
b <- .3 # This is the intercept
ystar <- b/(1-a) # This is the equilibrium value
timeserieslength <- 10
for (i in 1:timeserieslength) {
y2[i] <- (a*y1[i])+b
t[i] <- i
if (i < timeserieslength) y1[i+1]=y2[i]
}
mydata <- cbind(y1, y2, t)
parameters <- cbind(a, b, ystar)
parameters
mydata
y1 <- .3 # This is the initial condition
y2 <- 0
t <- 0
a <- 1.2# This is the slope
b <- .3 # This is the intercept
ystar <- b/(1-a) # This is the equilibrium value
timeserieslength <- 10
for (i in 1:timeserieslength) {
y2[i] <- (a*y1[i])+b
t[i] <- i
if (i < timeserieslength) y1[i+1]=y2[i]
}
mydata <- cbind(y1, y2, t)
parameters <- cbind(a, b, ystar)
parameters
mydata
plot(t, y1, type="o", ylab="Y", xlab="time", pch=20, lwd=2)
title(main = list("Y over time", cex=1.5,
col="black", font=1))
diff.model <- lm(y2 ~ y1)
summary(diff.model)
plot(y1, y2, xlab="", ylab="", xlim=c(.3, 9.7), ylim=c(.3, 9.7), pch=19)
title(xlab="Y", ylab="Y(t+1)", main="Plot of the first differences", cex=1.5,
col="black", font=2)
abline(diff.model, lwd=2)
#say what a and b are. use terms ex. stable unbounded, monotonic, equilibrium etc. regression reproduces the A and the B values
library(readr)
tips <- read_csv("~/Desktop/Emory Sem 4/QTM 151/Lab 1/tips.csv")
View(tips)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
ggplot(tips, aes(x=tip))+
geom_histogram(binwidth = 0.2)
qplot(tip, geom = "histogram", binwidth=0.3, data=tips)
qplot(tip, geom = "histogram", binwidth=0.3, color="blue", data=tips)
qplot(tip, geom = "histogram", binwidth=0.3, fill=I("blue"), data=tips)
qplot(tip, geom = "histogram", binwidth=0.3, fill=sex, data=tips)
qplot(tip, geom = "histogram", binwidth=0.3, fill=sex, data=tips, position = "identity")
qplot(tip, geom = "histogram", binwidth=0.3, fill=sex, data=tips)
qplot(totbill, tip, geom="point", data=tips)
qplot(totbill, tip,  data=tips, color=I("red"))  # qplot() gives a scatterplot by default
qplot(totbill, tip, geom = c("point","smooth"), data=tips)
qplot(totbill, tip, geom = c("point","smooth"), method="lm", data=tips)
qplot(totbill, tip, geom = c("point","smooth"), method="lm", formula=y~x, color=sex, data=tips)
qplot(totbill, tip, geom = c("point","smooth"), method="lm", data=tips)
qplot(totbill, tip, geom = c("point","smooth"), method="lm", formula=y~x, color=sex, data=tips)
ggplot(data = tips, aes(x = totbill, y= tip)) +
geom_point(aes(color = sex)) +
geom_smooth(method = "lm")
qplot(sex, tip, geom="boxplot", data=tips)
qplot(x=sex, y=tip, geom = "boxplot", fill=sex, data=tips)
qplot(x=sex, y=tip, geom = "boxplot", fill="blue", data=tips)
qplot(x=sex, y=tip, geom = "boxplot", fill=I("blue"), data=tips)
qplot(x=sex, y=tip, geom = "boxplot", fill=sex, data=tips)
qplot(sex:time, tip, geom="boxplot", data=tips)
qplot(sex, tip, geom="boxplot", facets=~time, data=tips)
qplot(sex, tip, geom="boxplot", fill = sex, facets=~smoker, data=tips)
qplot(sex, tip, geom="boxplot", fill = sex, facets=time~smoker, data=tips)
qplot(totbill, tip, geom=c("point", "smooth"), facets = ~day, method = "lm", formula = y~x, col = sex, data = tips)
qplot(totbill, tip, geom = c("point","smooth"), method="lm", formula=y~x, color=sex, data=tips)
qplot(totbill, tip, geom = c("point","smooth"), formula=y~x, color=sex, data=tips)
qplot(totbill, tip, geom = c("point","smooth"), method = "lm", formula=y~x, color=sex, data=tips)
qplot(totbill, tip, geom = c("point","smooth"), method = "lm", color=sex, data=tips)
qplot(totbill, tip, geom = c("point","smooth"), color=sex, data=tips)
qplot(totbill, tip, geom = c("point","smooth"), method = "lm", formula = y~x, color=sex, data=tips)
View(tips)
library(tidyverse)
library(tidyverse)
library(babynames)
library(nycflights13)
library(tidyverse)
library(babynames)
library(nycflights13)
library(plotly)
library(ggthemes)
ggplot(flights_summary, aes(x = avg_dist, y = avg_arr_delay)) +
geom_point(aes(size = total), alpha = I(0.5)) + # points w/ size adjusted to total number of flights
geom_smooth(method = "lm", se = FALSE)+ # OLS without SE ribbons
theme_fivethirtyeight() #cool theme i guess
flights <- nycflights13::flights
ggplot(flights_summary, aes(x = avg_dist, y = avg_arr_delay)) +
geom_point(aes(size = total), alpha = I(0.5)) + # points w/ size adjusted to total number of flights
geom_smooth(method = "lm", se = FALSE)+ # OLS without SE ribbons
theme_fivethirtyeight() #cool theme i guess
flights_summary <- flights %>%
group_by(dest) %>% #group by each airport
summarize(total = n(), avg_dist = mean(distance, na.rm = T), avg_arr_delay = mean(arr_delay, na.rm = T)) %>% #find total flights, avg distance and avg arrival delay
filter(dest != "HNL", total >= 20) # remove airport "HNL" and all airports with less than 20 flights
ggplot(flights_summary, aes(x = avg_dist, y = avg_arr_delay)) +
geom_point(aes(size = total), alpha = I(0.5)) + # points w/ size adjusted to total number of flights
geom_smooth(method = "lm", se = FALSE)+ # OLS without SE ribbons
theme_fivethirtyeight() #cool theme i guess
ggplot(flights_summary, aes(x = avg_dist, y = avg_arr_delay)) +
geom_point(aes(size = total), alpha = I(0.5)) + # points w/ size adjusted to total number of flights
geom_smooth(method = "np", se = FALSE)+ # OLS without SE ribbons
theme_fivethirtyeight() #cool theme i guess
ggplot(flights_summary, aes(x = avg_dist, y = avg_arr_delay)) +
geom_point(aes(size = total), alpha = I(0.5)) + # points w/ size adjusted to total number of flights
geom_smooth(method = "np_smooth", se = FALSE)+ # OLS without SE ribbons
theme_fivethirtyeight() #cool theme i guess
?geom_smooth
ggplot(flights_summary, aes(x = avg_dist, y = avg_arr_delay)) +
geom_point(aes(size = total), alpha = I(0.5)) + # points w/ size adjusted to total number of flights
geom_smooth(method = "lm", se = FALSE)+ # OLS without SE ribbons
theme_fivethirtyeight() #cool theme i guess
library(readr)
library(tidyverse)
library(lubridate)
library(stringr)
library(ggmap)
library(purrr)
library(plotly)
data <- read_delim("data.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
data <- read_delim("data.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
dest <- read_delim("dest.txt", "\t", escape_double = FALSE, trim_ws = TRUE)
data1<-data %>%
select(date_time, user_location_country, user_location_latitude, orig_destination_distance, cnt,
srch_destination_id, user_location_city, hotel_country, hotel_id, is_booking, user_location_longitude)
dest1 <- dest %>%
select(srch_destination_id, srch_destination_name, srch_destination_latitude, srch_destination_longitude)
joined <- left_join(data1, dest1, key = "srch_destination_id")
library(readr)
EMcurrent2016 <- read_csv("~/Desktop/Emory Compiled/Emory Sem 6/QTM 220/HW 1/EMcurrent2016.csv")
View(EMcurrent2016)
data <- EMcurrent2016
data$partypresnum <- 0
data[data$PartyPres == "D",]$partypresnum <- 1
lm1 <_ lm (data$SCscore ~1)
lm1 <- lm (data$SCscore ~1)
lm2 <- lm(data$SCscore ~ data$partypresnum)
lm2$coefficients
lm2$coefficients[1]
lm2$coefficients[2]
summary(lm2)
View(EMcurrent2016)
View(data)
library(tidyverse)
data_calc <- data %>%
mutate(x-xbar = data$SCscore - mean(data$SCscore))
data_calc <- data %>%
mutate(`x-xbar` = data$SCscore - mean(data$SCscore))
View(data)
View(data_calc)
data_calc <- data %>%
mutate(`x-xbar` = data$SCscore - mean(data$SCscore)) %>%
mutate(`y-ybar` = data$partypresnum - mean(data$partypresnum))
data_calc <- data %>%
mutate(`x-xbar` = data$SCscore - mean(data$SCscore)) %>%
mutate(`y-ybar` = data$partypresnum - mean(data$partypresnum)) %>%
mutate(gottaadd = (data$`x-xbar` + data$`y-ybar`)/n())
data_calc <- data %>%
mutate(`x-xbar` = data$SCscore - mean(data$SCscore)) %>%
mutate(`y-ybar` = data$partypresnum - mean(data$partypresnum)) %>%
mutate(gottaadd = (data$`x-xbar` + data$`y-ybar`))
data_calc <- data %>%
mutate(`x-xbar` = data$SCscore - mean(data$SCscore)) %>%
mutate(`y-ybar` = data$partypresnum - mean(data$partypresnum)) %>%
mutate(gottaadd = (data$x-xbar + data$`y-ybar`))
data_calc <- data %>%
mutate(`x-xbar` = SCscore - mean(SCscore)) %>%
mutate(`y-ybar` = partypresnum - mean(partypresnum)) %>%
mutate(gottaadd = (`x-xbar`` + `y-ybar`))
data_calc <- data %>%
mutate(`x-xbar` = SCscore - mean(SCscore)) %>%
mutate(`y-ybar` = partypresnum - mean(partypresnum)) %>%
mutate(gottaadd = (`x-xbar` + `y-ybar`))
data_calc <- data %>%
mutate(`x-xbar` = SCscore - mean(SCscore)) %>%
mutate(`y-ybar` = partypresnum - mean(partypresnum)) %>%
mutate(gottaadd = (`x-xbar` + `y-ybar`)/nrow())
data_calc <- data %>%
mutate(`x-xbar` = SCscore - mean(SCscore)) %>%
mutate(`y-ybar` = partypresnum - mean(partypresnum)) %>%
mutate(gottaadd = (`x-xbar` + `y-ybar`)/nrow(data))
Cov = sum(data$gottaadd)
Cov = sum(data_calc$gottaadd)
data_calc <- data %>%
mutate(`x-xbar` = SCscore - mean(SCscore)) %>%
mutate(`y-ybar` = partypresnum - mean(partypresnum)) %>%
mutate(gottaadd = (`x-xbar` * `y-ybar`)/nrow(data))
Cov = sum(data_calc$gottaadd)
?cov
cov(data$SCscore, y = data$partypresnumber)
cov(data$SCscore, y = data$partypresnum)
data_calc <- data %>%
mutate(`x-xbar` = SCscore - mean(SCscore)) %>%
mutate(`y-ybar` = partypresnum - mean(partypresnum)) %>%
mutate(gottaadd = (`x-xbar` * `y-ybar`)/nrow(data-1))
Cov = sum(data_calc$gottaadd)
data_calc <- data %>%
mutate(`x-xbar` = SCscore - mean(SCscore)) %>%
mutate(`y-ybar` = partypresnum - mean(partypresnum)) %>%
mutate(gottaadd = (`x-xbar` * `y-ybar`)/(nrow(data)-1))
Cov = sum(data_calc$gottaadd)
cov(data$SCscore, y = data$partypresnum)
?ex
?exp
Var = data_calc$`x-xbar`^2/nrow(data_)
Var = data_calc$`x-xbar`^2/nrow(data_calc)
Var = sum(data_calc$`x-xbar`^2/nrow(data_calc))
var(data$SCscore)
Var = sum(data_calc$`x-xbar`^2/nrow(data_calc)-1)
Var = sum(data_calc$`x-xbar`^2/(nrow(data_calc)-1))
Cov/var
Cov/Var
beta1 <- Cov/Var
beta0 <- mean(data$partypresnum) - beta1*mean(data$SCscore)
lm2 <- lm(data$SCscore ~ data$partypresnum)
summary(lm2)
cov(data$SCscore, data$partpresnum)/var(data$SCscore)
cov(data$SCscore, data$partypresnum)/var(data$SCscore)
data_calc <- data %>%
mutate(`y-ybar` = SCscore - mean(SCscore)) %>%
mutate(`x-xbar` = partypresnum - mean(partypresnum)) %>%
mutate(gottaadd = (`x-xbar` * `y-ybar`)/(nrow(data)-1))
Cov = sum(data_calc$gottaadd)
cov(data$SCscore, y = data$partypresnum) # checking work
Var = sum(data_calc$`x-xbar`^2/(nrow(data_calc)-1))
var(data$SCscore) # checking again
var(data$partypresnum) # checking again
beta1 <- Cov/Var
beta0 <- mean(data$partypresnum) - beta1*mean(data$SCscore)
lm2$coefficients
summary(lm2)
beta0 <- mean(data$SCscore) - beta1*mean(data$partypresnum)
knitr::opts_chunk$set(echo = TRUE, message = FALSE)
summary(lm2)
lm2 <- lm(SCdata$CLlib ~ SCdata$SCscore + SCdata$partypresnum)
summary(lm2)
# read data
library(MASS)
library(tidyverse)
setwd("~/Desktop/Emory Compiled/Emory Sem 6/QTM 220/HW 2")
library(readr)
SCdata <- read_csv("~/Desktop/Emory Compiled/Emory Sem 6/QTM 220/HW 2/EMdataFull2016.csv")
# Clean party president
SCdata$partypresnum <- 0
SCdata[SCdata$PartyPres == "D",]$partypresnum <- 1
# regression of civil liberty score on Segal Cover
lm1 <- lm(SCdata$CLlib ~ SCdata$SCscore)
summary(lm1)
plot(SCdata$SCscore, SCdata$CLlib, col = "blue")
abline(lm1, col = "red")
#regression of civil liberty score on segal cover and party pres num
lm2 <- lm(SCdata$CLlib ~ SCdata$SCscore + SCdata$partypresnum)
summary(lm2)
summary(lm2) # wait they're the same
summary(lm4)
lm3 <- lm(SCdata$SCscore ~ SCdata$partypresnum)
summary(lm3)
new_resid <- residuals(lm3)
lm4 <- lm(SCdata$CLlib ~ new_resid)
summary(lm4)
source('~/Desktop/Emory Compiled/Emory Sem 6/QTM 220/HW 6/HW 6.R')
source('~/Desktop/Emory Compiled/Emory Sem 6/QTM 220/HW 6/HW 6.R')
source('~/Desktop/Emory Compiled/Emory Sem 6/QTM 220/HW 6/HW 6.R')
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
qqnorm(lm.2$residuals); qqline(lm.2$residuals)
library(plm)
library(lmtest)
setwd("~/Desktop/Emory Compiled/Emory Sem 6/QTM 220/HW 6")
subprime <- read_csv("../HW 4/subprime.csv")
library(readr)
subprime <- read_csv("../HW 4/subprime.csv")
lm.1 <- lm(loan.amount ~ income, subprime)
summary(lm.1)
# check normality with qq plot
qqnorm(lm.1$residuals) ; qqline(lm.1$residuals)
subprime$logLoan <- log(subprime$loan.amount)
lm.2 <- lm(logLoan ~ income, subprime)
summary(lm.2)
# make qq plot
qqnorm(lm.2$residuals); qqline(lm.2$residuals)
qqnorm(rstudent(lm.2$residuals)); qqline(rstudent(lm.2$residuals))
library(MASS)
qqnorm(studres(lm.1)) ; qqline(studres(lm.2))
qqnorm(studres(lm.2)); qqline(studres(lm.2))
lm.5 <- lm(logLoan ~ income + woman, data = subprime)
summary(lm.2)
summary(lm.5)
summary(lm.2)
summary(lm.5)
summary(lm.2)
summary(lm.5)
summary(lm.2)
summary(lm.5)
summary(lm.2)
summary(lm.5)
plot(lm.2$fitted.values, studres(lm.2))
lm.3 <- lm(lm.2$residuals^2 ~ lm.2$fitted.values)
summary(lm.3)
hist(studres(lm.1))
hist(studres(lm.1), bin = .3)
hist(studres(lm.1), bin = .2)
hist(studres(lm.1), bin = .1)
hist(studres(lm.1), bin = .01)
hist(studres(lm.1), bin = .4)
hist(studres(lm.1), bin = 20)
hist(studres(lm.1))
hist(studres(lm.2))
model1 <- lm(logLoan ~ income + woman + black + income*woman + income*black + woman*black + woman*black*income, data = subprime)
AIC(model1)
model2 <- lm(logLoan ~ income + woman + black + income*woman + income*black + woman*black, data = subprime)
AIC(model2)
model3 <- lm(logLoan ~ income + woman + black + income*woman + income*black, data = subprime)
AIC(model3)
model4 <- lm(logLoan ~ income + woman + black + income*woman, data = subprime)
AIC(model4)
model5 <- lm(logLoan ~ income + woman + black, data = subprime)
AIC(model5)
model5 <- lm(logLoan ~ income + woman, data = subprime)
AIC(model6)
model6 <- lm(logLoan ~ income + woman, data = subprime)
model5 <- lm(logLoan ~ income + woman + black, data = subprime)
AIC(model5) # 21126.19
model6 <- lm(logLoan ~ income + woman, data = subprime)
AIC(model6)
model7 <- lm(logLoan ~ income, data = subprime)
AIC(model7)
temp <- rnorm(0, 1000, 100)
temp <- rnorm(10197, 0, 100)
temp <- rnorm(10197, 0, 1000)
subprime$newincome <- subprime$income + temp
lm.6 <- lm(logLoan ~ newincome, subprime)
summary(lm.6)
summary(lm.2)
summary(lm.6)
summary(lm.2)
summary(lm.6)
summary(lm.2)
summary(lm.6)
lm.clustered <- lm.cluster(logLoan ~ income, cluster = woman, data = subprime)
library(lmtest)
lm.clustered <- lm.cluster(logLoan ~ income, cluster = woman, data = subprime)
install.packages("miceadds")
install.packages('miceadds')
library(miceadds)
lm.clustered <- lm.cluster(logLoan ~ income, cluster = woman, data = subprime)
lm.clustered <- lm.cluster(logLoan ~ income, cluster = subprime$woman, data = subprime)
summary(lm.clustered)
qqnorm(studres(lm.2)); qqline(studres(lm.2))
qqPlot(lm.2)
qqnorm(studres(lm.2)); qqline(studres(lm.2))
library(distr)
install.packages("distr")
library(distr)
qqplot(lm.2)
qqPlot(lm.2)
qqnorm(studres(lm.2)); qqline(studres(lm.2))
qqnorm(studres(lm.1)) ; qqline(studres(lm.2))
hist(studres(lm.1))
qqnorm(studres(lm.2)); qqline(studres(lm.2))
qqnorm(studres(lm.2)); qqline(studres(lm.2))
hist(studres(lm.2))
plot(lm.2$fitted.values, studres(lm.2))
subprime$missingInc <- subprime$income
subprime$missingInc[1:2000] <- NA
View(subprime)
library(mice)
md.pattern(subprime)
tempData <- mice(subprime,m=5,maxit=50,meth='pmm',seed=500)
View(tempData)
pred <- matrix(0,10,10)
pred[10, c(6,7)]<- 1
View(pred)
tempData <- with(mice(data = subprime, pred = pred, m=5), lm(logLoan ~ missingInc))
summary(pool(tempData))
lm.2$coefficients
pred <- matrix(0,10,10)
tempData <- with(mice(data = subprime, pred = pred, m=5), lm(logLoan ~ missingInc))
pred <- matrix(0,10,10)
tempData <- with(mice(data = subprime, pred = pred, m=5), lm(logLoan ~ missingInc))
pred <- matrix(0,10,10)
pred[10, c(6,7)]<- 1
tempData <- with(mice(data = subprime, pred = pred, m=5), lm(logLoan ~ missingInc))
summary(pool(tempData))
lm.2$coefficients
summary(pool(tempData))
summary(lm.2)
summary(lm.5)
lm.1 <- lm(loan.amount ~ income, subprime)
summary(lm.1)
qqnorm(studres(lm.1)) ; qqline(studres(lm.2))
hist(studres(lm.1))
knitr::opts_chunk$set(echo = TRUE)
library(lmwork)
setwd("~/Desktop/Coding/NBAchatbot")
library(readr)
espn <- read_csv("~/Desktop/Coding/NBAchatbot/espn.csv")
View(espn)
library(tidyverse)
espn_new <- espn %>%
filter(grepl('nba', url))
View(espn_new)
View(espn)
write_csv?
)
?write_csv
setwd("~/Desktop/Coding/NBAchatbot")
write_csv(espn_new, "espn.csv", append = FALSE)
